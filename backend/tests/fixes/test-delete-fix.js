require('dotenv').config();
const axios = require('axios');

const api = axios.create({
  baseURL: 'http://localhost:3001',
  headers: {
    'Content-Type': 'application/json',
    'apikey': 'whatsapp-crm-evolution-key-2024-secure',
  },
});

async function testDeleteFix() {
  console.log('üß™ Testando corre√ß√£o da dele√ß√£o...\n');

  try {
    // 1. Health check
    console.log('1Ô∏è‚É£ Health check...');
    const health = await api.get('/api/whatsapp/health');
    console.log('‚úÖ Backend OK:', health.data.status);

    // 2. Listar inst√¢ncias antes
    console.log('\n2Ô∏è‚É£ Listando inst√¢ncias antes da dele√ß√£o...');
    const instancesBefore = await api.get('/api/whatsapp/instances');
    console.log('üìä Inst√¢ncias antes:', instancesBefore.data.length);
    instancesBefore.data.forEach(inst => {
      console.log(`   - ${inst.instance.instanceName}: ${inst.instance.status}`);
    });

    // 3. Deletar inst√¢ncia teste
    console.log('\n3Ô∏è‚É£ Deletando inst√¢ncia "teste"...');
    try {
      const deleteResponse = await api.delete('/api/whatsapp/instances/teste');
      console.log('‚úÖ Dele√ß√£o:', deleteResponse.data);
    } catch (error) {
      console.error('‚ùå Erro na dele√ß√£o:', error.response?.data || error.message);
    }

    // 4. Verificar ap√≥s dele√ß√£o
    console.log('\n4Ô∏è‚É£ Verificando ap√≥s dele√ß√£o...');
    const instancesAfter = await api.get('/api/whatsapp/instances');
    console.log('üìä Inst√¢ncias ap√≥s:', instancesAfter.data.length);
    instancesAfter.data.forEach(inst => {
      console.log(`   - ${inst.instance.instanceName}: ${inst.instance.status}`);
    });

    // 5. Testar dele√ß√£o de inst√¢ncia inexistente
    console.log('\n5Ô∏è‚É£ Testando dele√ß√£o de inst√¢ncia inexistente...');
    try {
      await api.delete('/api/whatsapp/instances/inexistente');
    } catch (error) {
      console.log('‚úÖ Erro esperado para inst√¢ncia inexistente:', error.response?.data?.message);
    }

  } catch (error) {
    console.error('‚ùå Erro:', error.response?.data || error.message);
  }
}

testDeleteFix(); 