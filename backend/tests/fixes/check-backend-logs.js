require('dotenv').config();
const axios = require('axios');

const api = axios.create({
  baseURL: 'http://localhost:3001',
  headers: {
    'Content-Type': 'application/json',
    'apikey': 'whatsapp-crm-evolution-key-2024-secure',
  },
});

async function checkBackendLogs() {
  console.log('üîç Verificando logs do backend...\n');

  try {
    // 1. Health check
    console.log('1Ô∏è‚É£ Health check...');
    const health = await api.get('/api/whatsapp/health');
    console.log('‚úÖ Backend OK:', health.data.status);

    // 2. Listar inst√¢ncias
    console.log('\n2Ô∏è‚É£ Listando inst√¢ncias...');
    const instances = await api.get('/api/whatsapp/instances');
    console.log('üìä Inst√¢ncias:', instances.data.length);
    instances.data.forEach(inst => {
      console.log(`   - ${inst.instance.instanceName}: ${inst.instance.status} (persistida: ${inst.persisted})`);
    });

    // 3. Testar dele√ß√£o com logs detalhados
    console.log('\n3Ô∏è‚É£ Testando dele√ß√£o com logs detalhados...');
    console.log('   (Verifique o terminal do backend para ver os logs)');
    
    try {
      const deleteResponse = await api.delete('/api/whatsapp/instances/teste');
      console.log('‚úÖ Dele√ß√£o bem-sucedida:', deleteResponse.data);
    } catch (error) {
      console.error('‚ùå Erro na dele√ß√£o:');
      console.error('   Status:', error.response?.status);
      console.error('   Mensagem:', error.response?.data?.message);
      console.error('   Erro:', error.response?.data?.error);
      
      // Verificar se √© o erro esperado
      if (error.response?.data?.message === 'Instance not found in database') {
        console.log('‚úÖ Erro esperado: Inst√¢ncia n√£o encontrada no banco');
      } else if (error.response?.data?.message === 'Instance not found') {
        console.log('‚ùå Erro inesperado: Inst√¢ncia n√£o encontrada no servi√ßo');
        console.log('   Isso indica que a corre√ß√£o n√£o foi aplicada corretamente');
      }
    }

    // 4. Verificar ap√≥s tentativa
    console.log('\n4Ô∏è‚É£ Verificando ap√≥s tentativa...');
    const instancesAfter = await api.get('/api/whatsapp/instances');
    console.log('üìä Inst√¢ncias ap√≥s:', instancesAfter.data.length);
    instancesAfter.data.forEach(inst => {
      console.log(`   - ${inst.instance.instanceName}: ${inst.instance.status}`);
    });

  } catch (error) {
    console.error('‚ùå Erro:', error.response?.data || error.message);
  }
}

checkBackendLogs(); 