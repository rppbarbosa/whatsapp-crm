// ===== VERIFICAR INST√ÇNCIAS DISPON√çVEIS =====

require('dotenv').config();
const evolutionApiService = require('./src/services/evolutionApi');
const whatsappService = require('./src/services/whatsappService');

async function checkAvailableInstances() {
  try {
    console.log('üîç Verificando inst√¢ncias dispon√≠veis...\n');
    
    // 1. Verificar inst√¢ncias do Evolution API
    console.log('1Ô∏è‚É£ Inst√¢ncias do Evolution API:');
    const evolutionInstances = evolutionApiService.getInstances();
    console.log(`üìä ${evolutionInstances.length} inst√¢ncias encontradas`);
    
    if (evolutionInstances.length === 0) {
      console.log('   ‚ö†Ô∏è Nenhuma inst√¢ncia ativa no Evolution API');
    } else {
      evolutionInstances.forEach((inst, index) => {
        console.log(`   ${index + 1}. ${inst.instanceName}: ${inst.status}`);
        console.log(`      Telefone: ${inst.phone_number || 'N/A'}`);
        console.log(`      QR Code: ${inst.qrcode ? 'Dispon√≠vel' : 'N√£o dispon√≠vel'}`);
        console.log('');
      });
    }
    
    // 2. Verificar inst√¢ncias do WhatsApp Service
    console.log('2Ô∏è‚É£ Inst√¢ncias do WhatsApp Service:');
    const whatsappInstances = await whatsappService.getInstances();
    console.log(`üìä ${whatsappInstances.length} inst√¢ncias encontradas`);
    
    if (whatsappInstances.length === 0) {
      console.log('   ‚ö†Ô∏è Nenhuma inst√¢ncia encontrada no WhatsApp Service');
    } else {
      whatsappInstances.forEach((inst, index) => {
        console.log(`   ${index + 1}. ${inst.instance_name}: ${inst.status}`);
        console.log(`      Telefone: ${inst.phone_number || 'N/A'}`);
        console.log(`      Criado em: ${inst.created_at}`);
        console.log(`      Atualizado em: ${inst.updated_at}`);
        console.log('');
      });
    }
    
    // 3. Verificar inst√¢ncias conectadas
    console.log('3Ô∏è‚É£ Inst√¢ncias Conectadas:');
    const connectedInstances = evolutionInstances.filter(inst => inst.status === 'connected');
    console.log(`üìä ${connectedInstances.length} inst√¢ncias conectadas`);
    
    if (connectedInstances.length === 0) {
      console.log('   ‚ö†Ô∏è Nenhuma inst√¢ncia conectada');
      console.log('   üí° Para testar envio de mensagens, conecte uma inst√¢ncia primeiro');
    } else {
      connectedInstances.forEach((inst, index) => {
        console.log(`   ${index + 1}. ${inst.instanceName} (${inst.phone_number})`);
      });
    }
    
    // 4. Sugest√µes
    console.log('\n4Ô∏è‚É£ Sugest√µes:');
    if (evolutionInstances.length === 0) {
      console.log('   üìù Crie uma nova inst√¢ncia:');
      console.log('      - V√° para a p√°gina de gerenciamento de inst√¢ncias');
      console.log('      - Clique em "Criar Nova Inst√¢ncia"');
      console.log('      - Escaneie o QR code com o WhatsApp');
    } else if (connectedInstances.length === 0) {
      console.log('   üìù Conecte uma inst√¢ncia:');
      console.log('      - V√° para a p√°gina de gerenciamento de inst√¢ncias');
      console.log('      - Clique em "Conectar" na inst√¢ncia desejada');
      console.log('      - Aguarde a conex√£o ser estabelecida');
    } else {
      console.log('   ‚úÖ Inst√¢ncias dispon√≠veis para teste!');
      console.log(`   üì± Use a inst√¢ncia: ${connectedInstances[0].instanceName}`);
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar inst√¢ncias:', error);
  }
}

// Executar verifica√ß√£o
checkAvailableInstances(); 