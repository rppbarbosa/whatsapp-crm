# Script de Corre√ß√£o do Backend - WhatsApp CRM
Write-Host "üîß Script de Corre√ß√£o do Backend - WhatsApp CRM" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path "backend/package.json")) {
    Write-Host "‚ùå Erro: Execute este script na raiz do projeto" -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ Diret√≥rio atual: $(Get-Location)" -ForegroundColor Yellow
Write-Host ""

# Fun√ß√£o para limpar sess√µes
function Cleanup-Sessions {
    Write-Host "üßπ Limpando sess√µes do WhatsApp Web.js..." -ForegroundColor Yellow
    Set-Location backend
    if (Test-Path "cleanup-sessions.js") {
        node cleanup-sessions.js
    } else {
        Write-Host "‚ö†Ô∏è Script de limpeza n√£o encontrado" -ForegroundColor Yellow
    }
    Set-Location ..
}

# Fun√ß√£o para verificar processos
function Check-Processes {
    Write-Host "üîç Verificando processos..." -ForegroundColor Yellow
    
    # Verificar se o backend est√° rodando
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:3001/health" -TimeoutSec 5 -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Backend est√° rodando na porta 3001" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Backend n√£o est√° rodando na porta 3001" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Backend n√£o est√° rodando na porta 3001" -ForegroundColor Red
    }
    
    # Verificar se o frontend est√° rodando
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5 -ErrorAction SilentlyContinue
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Frontend est√° rodando na porta 3000" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Frontend n√£o est√° rodando na porta 3000" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Frontend n√£o est√° rodando na porta 3000" -ForegroundColor Red
    }
}

# Fun√ß√£o para matar processos
function Kill-Processes {
    Write-Host "üõë Matando processos..." -ForegroundColor Yellow
    
    # Matar processos na porta 3001
    try {
        $processes = Get-NetTCPConnection -LocalPort 3001 -ErrorAction SilentlyContinue | Select-Object -ExpandProperty OwningProcess
        foreach ($processId in $processes) {
            Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
        }
        Write-Host "‚úÖ Processos na porta 3001 finalizados" -ForegroundColor Green
    } catch {
        Write-Host "‚ÑπÔ∏è Nenhum processo na porta 3001" -ForegroundColor Gray
    }
    
    # Matar processos na porta 3000
    try {
        $processes = Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue | Select-Object -ExpandProperty OwningProcess
        foreach ($processId in $processes) {
            Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
        }
        Write-Host "‚úÖ Processos na porta 3000 finalizados" -ForegroundColor Green
    } catch {
        Write-Host "‚ÑπÔ∏è Nenhum processo na porta 3000" -ForegroundColor Gray
    }
}

# Fun√ß√£o para reinstalar depend√™ncias
function Reinstall-Dependencies {
    Write-Host "üì¶ Reinstalando depend√™ncias..." -ForegroundColor Yellow
    Set-Location backend
    if (Test-Path "node_modules") {
        Remove-Item -Recurse -Force "node_modules" -ErrorAction SilentlyContinue
    }
    if (Test-Path "package-lock.json") {
        Remove-Item "package-lock.json" -ErrorAction SilentlyContinue
    }
    npm install
    Set-Location ..
    Write-Host "‚úÖ Depend√™ncias reinstaladas" -ForegroundColor Green
}

# Fun√ß√£o para mostrar menu
function Show-Menu {
    Write-Host ""
    Write-Host "Escolha uma op√ß√£o:" -ForegroundColor Cyan
    Write-Host "1) Limpar sess√µes do WhatsApp Web.js" -ForegroundColor White
    Write-Host "2) Verificar processos" -ForegroundColor White
    Write-Host "3) Matar processos" -ForegroundColor White
    Write-Host "4) Reinstalar depend√™ncias" -ForegroundColor White
    Write-Host "5) Limpeza completa (sess√µes + processos)" -ForegroundColor White
    Write-Host "6) Sair" -ForegroundColor White
    Write-Host ""
    $choice = Read-Host "Digite sua op√ß√£o (1-6)"
    return $choice
}

# Fun√ß√£o para processar escolha
function Process-Choice {
    param($choice)
    
    switch ($choice) {
        "1" { Cleanup-Sessions }
        "2" { Check-Processes }
        "3" { Kill-Processes }
        "4" { Reinstall-Dependencies }
        "5" { 
            Write-Host "üßπ Executando limpeza completa..." -ForegroundColor Yellow
            Cleanup-Sessions
            Kill-Processes
            Write-Host "‚úÖ Limpeza completa finalizada" -ForegroundColor Green
        }
        "6" { 
            Write-Host "üëã Saindo..." -ForegroundColor Cyan
            exit 0 
        }
        default { Write-Host "‚ùå Op√ß√£o inv√°lida" -ForegroundColor Red }
    }
}

# Loop principal
while ($true) {
    $choice = Show-Menu
    Process-Choice $choice
    Write-Host ""
    Read-Host "Pressione Enter para continuar"
} 